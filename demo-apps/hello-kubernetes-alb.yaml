apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-kubernetes-alb
spec:
  replicas: 3
  selector:
    matchLabels:
      app: hello-kubernetes-alb
  template:
    metadata:
      labels:
        app: hello-kubernetes-alb
    spec:
      securityContext:
        supplementalGroups:
          - 1000
        fsGroup: 1000
      containers:
        - name: hello-kubernetes-alb
          image: paulbouwer/hello-kubernetes:1.10
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "512Mi"
              cpu: "0.5"
            limits:
              memory: "512Mi"
              cpu: "0.5"
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            capabilities:
              drop:
                - ALL
            allowPrivilegeEscalation: false
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /
              port: 8080
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /
              port: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: hello-kubernetes-alb
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
  selector:
    app: hello-kubernetes-alb
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hello-kubernetes-alb
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    #alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
    #alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:{region}:{user id}:certificate/{id}
    #external-dns.alpha.kubernetes.io/hostname: hello-kubernetes-alb.r53domain.com
spec:
  rules:
    - http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: hello-kubernetes-alb
                port:
                  number: 80
